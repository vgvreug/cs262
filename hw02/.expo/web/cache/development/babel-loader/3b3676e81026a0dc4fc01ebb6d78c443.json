{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vgv2/cs262/cs262/lab04/App.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    title: \"Fellowship of the Ring\",\n    rating: 8.8,\n    key: '1',\n    description: \"Some hobbits begin a quest.\"\n  }, {\n    title: \"Two Towers\",\n    rating: 8.7,\n    key: '2',\n    description: 'Some dark lords try to take over the world.'\n  }, {\n    title: \"Return of the King\",\n    rating: 8.9,\n    key: '3',\n    description: 'The dark lords are defeated, to much rejoicing.'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Details', item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, item.title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction DetailsScreen(_ref3) {\n  var route = _ref3.route,\n      navigation = _ref3.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, route.params.title), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, route.params.rating), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, route.params.description));\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Overview'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vgv2/cs262/cs262/lab04/App.js"],"names":["React","useState","NavigationContainer","createNativeStackNavigator","HomeScreen","navigation","title","rating","key","description","reviews","setReviews","flex","padding","item","navigate","DetailsScreen","route","params","Stack","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, View, Text, TouchableOpacity, FlatList } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction HomeScreen({ navigation }) {\n\n    /* Hardcode a \"database\"/list of movies. */\n    const [reviews, setReviews] = useState([\n        { title: \"Fellowship of the Ring\", rating: 8.8, key: '1',\n            description: \"Some hobbits begin a quest.\"},\n        { title: \"Two Towers\", rating: 8.7, key: '2',\n            description: 'Some dark lords try to take over the world.'},\n        { title: \"Return of the King\", rating: 8.9, key: '3',\n            description: 'The dark lords are defeated, to much rejoicing.'},\n    ]);\n\n    return (\n        <View style={{ flex: 1, padding: 20}}>\n            {/* Get rid of that ugly button and, instead, display our list of movies. */}\n            <FlatList data={reviews} renderItem={({ item })=> (\n                <TouchableOpacity onPress={() => navigation.navigate('Details', item)}>\n                    <Text>{ item.title }</Text>\n                </TouchableOpacity>\n            )} />\n        </View>\n    );\n}\n\nfunction DetailsScreen({ route, navigation }) {\n\n    return (\n        <View style={{ flex: 1, padding: 20}}>\n            {/* Display the fields of the received movie object. */}\n            <Text>{ route.params.title }</Text>\n            <Text>{ route.params.rating }</Text>\n            <Text>{ route.params.description }</Text>\n        </View>\n    );\n}\n\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return(\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen} \n          options={{ title: 'Overview'}}\n        />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}