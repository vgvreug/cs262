{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vgv2/cs262/cs262/lab04/App.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    title: \"Fellowship of the Ring\",\n    rating: 8.8,\n    key: '1',\n    description: \"Some hobbits begin a quest.\"\n  }, {\n    title: \"Two Towers\",\n    rating: 8.7,\n    key: '2',\n    description: 'Some dark lords try to take over the world.'\n  }, {\n    title: \"Return of the King\",\n    rating: 8.9,\n    key: '3',\n    description: 'The dark lords are defeated, to much rejoicing.'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      navigation.navigate('Details', {\n        itemId: 86,\n        otherParam: 'Hello World'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction DetailsScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  var _route$params = route.params,\n      itemId = _route$params.itemId,\n      otherParam = _route$params.otherParam;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Details Screen\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"itemID: \", JSON.stringify(itemId)), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"otherParam: \", JSON.stringify(otherParam)), React.createElement(Button, {\n    title: \"Go to Details again\",\n    onPress: function onPress() {\n      return navigation.push('Details', {\n        itemId: Math.floor(Math.random() * 100),\n        otherParam: 'Hello again!'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Go to Home\",\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Go back\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Overview'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/vgv2/cs262/cs262/lab04/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","HomeScreen","navigation","useState","title","rating","key","description","reviews","setReviews","styles","container","navigate","itemId","otherParam","DetailsScreen","route","params","flex","alignItems","justifyContent","JSON","stringify","push","Math","floor","random","goBack","Stack","App","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction HomeScreen({navigation}){\n  /* Hardcode a \"database\"/list of movies. */\n  const [reviews, setReviews] = useState([\n    { title: \"Fellowship of the Ring\", rating: 8.8, key: '1',\n        description: \"Some hobbits begin a quest.\"},\n    { title: \"Two Towers\", rating: 8.7, key: '2',\n        description: 'Some dark lords try to take over the world.'},\n    { title: \"Return of the King\", rating: 8.9, key: '3',\n        description: 'The dark lords are defeated, to much rejoicing.'},\n  ]);\n  return(\n  <View style={styles.container}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => {\n          navigation.navigate('Details', {\n            itemId: 86,\n            otherParam: 'Hello World',\n          });\n        }}\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen({route, navigation}){\n  const { itemId, otherParam } = route.params;\n  return (\n    <View style = {{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Text>Details Screen</Text>\n      <Text>itemID: {JSON.stringify(itemId)}</Text>\n      <Text>otherParam: {JSON.stringify(otherParam)}</Text>\n      <Button\n        title=\"Go to Details again\"\n        onPress={() => \n          navigation.push('Details', {\n            itemId: Math.floor(Math.random() * 100),\n            otherParam: 'Hello again!',\n          })\n        }\n      />\n      <Button\n        title=\"Go to Home\"\n        onPress={() => navigation.navigate('Home')}\n      />\n      <Button \n        title=\"Go back\" \n        onPress={() => navigation.goBack()} \n      />\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return(\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen} \n          options={{ title: 'Overview'}}\n        />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}